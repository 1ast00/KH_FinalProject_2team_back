<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vitalog.spring_diet.mapper.AdminReviewsMapper">

    <!-- 목록 (11g 호환: ROW_NUMBER) -->
    <select id="selectReviewsPage" parameterType="map"
            resultType="com.vitalog.spring_diet.dto.admindashboard.AdminReviewsListItemDTO">
        SELECT * FROM (
        SELECT
        br.brno                               AS brno,
        br.mno                                AS mno,
        br.brtitle                            AS title,
        NVL(m.nickname, m.userid)             AS writer,
        TO_CHAR(br.brwrite_date,'YYYY-MM-DD') AS writeDate,
        CASE WHEN br.brstatus = 1 THEN '게시' ELSE '숨김' END AS visible,
        ROW_NUMBER() OVER (ORDER BY br.brno DESC) AS rn
        FROM BoardReview br
        JOIN member m ON m.mno = br.mno
        <where>
            <if test="q != null and q != ''">
                (LOWER(br.brtitle) LIKE LOWER('%' || #{q} || '%')
                OR LOWER(m.nickname) LIKE LOWER('%' || #{q} || '%')
                OR LOWER(m.userid)   LIKE LOWER('%' || #{q} || '%'))
            </if>
            <if test="status != null and (status == 0 or status == 1)">
                AND br.brstatus = #{status}
            </if>
        </where>
        ) t
        WHERE t.rn BETWEEN (#{offset} + 1) AND (#{offset} + #{size})
    </select>

    <select id="countReviewsPage" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM BoardReview br
        JOIN member m ON m.mno = br.mno
        <where>
            <if test="q != null and q != ''">
                (LOWER(br.brtitle) LIKE LOWER('%' || #{q} || '%')
                OR LOWER(m.nickname) LIKE LOWER('%' || #{q} || '%')
                OR LOWER(m.userid)   LIKE LOWER('%' || #{q} || '%'))
            </if>
            <if test="status != null and (status == 0 or status == 1)">
                AND br.brstatus = #{status}
            </if>
        </where>
    </select>

<<<<<<< HEAD
=======
    <!-- 상세: 신고 카운트 2개 추가 -->
>>>>>>> main
    <select id="selectReviewDetail" parameterType="long"
            resultType="com.vitalog.spring_diet.dto.admindashboard.AdminReviewDetailDTO">
        SELECT
        br.brno                         AS brno,
        br.brtitle                      AS title,
        br.brcontent                    AS content,
        NVL(m.nickname, m.userid)       AS writer,
        TO_CHAR(br.brwrite_date,'YYYY-MM-DD') AS writeDate,
        CASE WHEN br.brstatus = 1 THEN '게시' ELSE '숨김' END AS status,
        br.brdanger                     AS danger,
        /* 리뷰 글 신고 수 */
        (SELECT COUNT(*) FROM AdminReport ar
        WHERE ar.target_type = 'REVIEW_POST'
        AND ar.target_id   = br.brno) AS reportPostCount,
        /* 리뷰 댓글 신고 수 (댓글 PK 이름 프로젝트 기준으로 brcno 사용) */
        (SELECT COUNT(*) FROM AdminReport ar
        WHERE ar.target_type = 'REVIEW_COMMENT'
        AND ar.target_id IN (SELECT c.brcno FROM BRComment c WHERE c.brno = br.brno)
        ) AS reportCommentCount
        FROM BoardReview br
        JOIN member m ON m.mno = br.mno
        WHERE br.brno = #{brno}
    </select>

    <!-- 댓글 아이템 매핑: wdate -> date -->
    <resultMap id="ReviewCommentMap"
               type="com.vitalog.spring_diet.dto.admindashboard.AdminReviewDetailDTO$CommentItem">
<<<<<<< HEAD
        <result column="id"     property="id"/>
=======
        <result column="id"      property="id"/>
>>>>>>> main
        <result column="content" property="content"/>
        <result column="writer"  property="writer"/>
        <result column="wdate"   property="date"/>
    </resultMap>

    <!-- 최근 댓글 N개 (11g 호환) -->
    <select id="selectRecentReviewComments" parameterType="map" resultMap="ReviewCommentMap">
        SELECT id, content, writer, wdate
        FROM (
        SELECT
        c.brcno                               AS id,
        c.brccontent                          AS content,
        NVL(m.nickname, m.userid)             AS writer,
        TO_CHAR(c.brcwrite_date,'YYYY-MM-DD') AS wdate,
        ROW_NUMBER() OVER (ORDER BY c.brcno DESC) AS rn
        FROM BRComment c
        JOIN member m ON m.mno = c.mno
        WHERE c.brno = #{brno}
        ) t
        WHERE t.rn &lt;= #{limit}
    </select>

    <update id="updateReviewStatus">
        UPDATE BoardReview SET brstatus = #{status} WHERE brno = #{brno}
    </update>
</mapper>
